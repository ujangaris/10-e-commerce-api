#Section 13: E-Commerce API | 240. Setup
    npm install && npm start

#Section 13: E-Commerce API | 241. Basic Express Server

#Section 13: E-Commerce API | 242. connect To DB
    pada browser: mongodb Atlas => connect -> pilih yang ke 2 copy code aplication:
            mongodb+srv://ujang:<password>@nodeexpressproject.kfzgl.mongodb.net/myFirstDatabase?retryWrites=true&w=majority

    paste pada file .env dan modifikasi:
        MONGO_URL=mongodb+srv://ujang:admin0k8@nodeexpressproject.kfzgl.mongodb.net/10-e-commerce?retryWrites=true&w=majority

#Section 13: E-Commerce API | 243. Basic Routes

#Section 13: E-Commerce API | 244. notFound vs errorHandler Middleware

#Section 13: E-Commerce API | 245. Morgan Package
    Documentation: https://www.npmjs.com/package/morgan
    buka browser: http://localhost:5000
        kemudian liat pada terminal : GET / 200 - - 7.403 ms
    buka browser: http://localhost:5000/apple
        kemudian liat pada terminal : GET /apple 404 20 - 0.773 ms

#Section 13: E-Commerce API | 246. User Model

#Section 13: E-Commerce API | 247. Validator Package
    Documentation:
        npm validator: https://www.npmjs.com/package/validator
        mongoose: https://mongoosejs.com/docs/validation.html 

#Section 13: E-Commerce API | 248. Auth Routes Structure

#Section 13: E-Commerce API | 249. Postman Environment Setup
    pada postman:
        No Environment klik add trus namakan : DEV Environment
        VARIABLE                INITIAL VALUE                   CURRENT VALUE
        URL                     http://localhost:5000/api/v1    http://localhost:5000/api/v1

        kemudian save.
    
        Logout User
            GET {{URL}}/auth/logout
        Login User
            POST {{URL}}/auth/Login
        Register User
            POST {{URL}}/auth/register

#Section 13: E-Commerce API | 250. Register - Initial Setup
    Pengujian pada Postman:
        Register User:
            POST {{URL}}/auth/register
                body -> raw -> json:
                    {
                        "name": "david",
                        "email": "david@gmail.com",
                        "password": "secret"
                    }
                hasil response:
                    {
                        "user": {
                            "name": "david",
                            "email": "david@gmail.com",
                            "password": "secret",
                            "role": "user",
                            "_id": "61a86e4f93279f8d41088271",
                            "__v": 0
                        }
                    }

#Section 13: E-Commerce API | 251. Register - Unique Email
    Pengujian pada Postman:
        Register User:
            POST {{URL}}/auth/register
                body -> raw -> json:
                    {
                        "name": "david",
                        "email": "david@gmail.com",
                        "password": "secret"
                    }
                hasil response: 
                    {
                        "msg": "Email already exists"
                    }













